// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package di

import (
	"github.com/srvc/ery/pkg/app/api"
	"github.com/srvc/ery/pkg/app/dns"
	"github.com/srvc/ery/pkg/app/proxy"
	"github.com/srvc/ery/pkg/ery"
)

// Injectors from wire.go:

func NewServerApp(cfg *ery.Config) *ServerApp {
	mappingRepository := ProvideLocalMappingRepository()
	config := ProvideAPIConfig(cfg)
	server := api.NewServer(mappingRepository, config)
	dnsConfig := ProvideDNSConfig(cfg)
	dnsServer := dns.NewServer(mappingRepository, dnsConfig)
	serverFactory := proxy.NewFactory(mappingRepository)
	manager := proxy.NewManager(mappingRepository, serverFactory)
	containerRepository := ProvideLocalDockerContainerRepository()
	watcher := ProvideContainerWatcher(cfg, mappingRepository, containerRepository)
	serverApp := &ServerApp{
		APIServer:        server,
		DNSServer:        dnsServer,
		ProxyServer:      manager,
		ContainerWatcher: watcher,
	}
	return serverApp
}

func NewClientApp(cfg *ery.Config) *ClientApp {
	config := ProvideAPIConfig(cfg)
	url := ProvideAPIServerURL(config)
	dnsConfig := ProvideDNSConfig(cfg)
	client := ProvideHTTPClient(dnsConfig)
	mappingRepository := ProvideRemoteMappingRepository(url, client)
	runner := ProvideCommandRunner(cfg, mappingRepository)
	clientApp := &ClientApp{
		CommandRunner: runner,
		MappingRepo:   mappingRepository,
	}
	return clientApp
}

func NewDaemonApp(cfg *ery.Config) *DaemonApp {
	daemonConfig := ProvideDaemonConfig(cfg)
	factory := ProvideDaemonFactory(daemonConfig)
	daemonApp := &DaemonApp{
		DaemonFactory: factory,
	}
	return daemonApp
}
